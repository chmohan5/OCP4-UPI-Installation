#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    # local2.*                       /var/log/haproxy.log
    #
    # log         127.0.0.1 local2
    log	/dev/log	local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     20000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

# ----------------------------------------------------- #
# HAProxy Configuration
listen stats
	bind *:9000
	stats enable
	stats refresh 10000ms
	stats uri /stats
	monitor-uri /healthz

# Kube API Server
frontend k8s_api_frontend
    bind *:6443
    default_backend k8s_api_backend
    mode tcp

backend k8s_api_backend
    mode tcp
    balance source
    server      bootstrap 10.10.1.107:6443 check
    server      master1 10.10.1.108:6443 check
    server      master2 10.10.1.109:6443 check
    server      master3 10.10.1.110:6443 check

# OCP Machine Config Server
frontend ocp_machine_config_server_frontend
    mode tcp
    bind *:22623
    default_backend ocp_machine_config_server_backend

backend ocp_machine_config_server_backend
    mode tcp
    balance source
    server      bootstrap 10.10.1.107:22623 check
    server      master1 10.10.1.108:22623 check
    server      master2 10.10.1.109:22623 check
    server      master3 10.10.1.110:22623 check


# OCP Application Ingress Traffic - layer 4 tcp mode for each. Ingress Controller will handle layer 7.
frontend ocp_http_ingress_frontend
    bind *:80
    default_backend ocp_http_ingress_backend
    mode tcp

backend ocp_http_ingress_backend
    balance source
    mode tcp
    server      worker1 10.10.1.111:80 check
    server      worker2 10.10.1.112:80 check
    server      worker3 10.10.1.113:80 check
    server      worker4 10.10.1.114:80 check

# OCP Application Ingress Traffic Secure - layer 4 tcp mode for each. Ingress Controller will handle layer 7.
frontend ocp_https_ingress_frontend
    bind *:443
    default_backend ocp_https_ingress_backend
    mode tcp

backend ocp_https_ingress_backend
    balance source
    mode tcp
    server      worker1 10.10.1.111:443 check
    server      worker2 10.10.1.112:443 check
    server      worker3 10.10.1.113:443 check
    server      worker4 10.10.1.114:443 check
